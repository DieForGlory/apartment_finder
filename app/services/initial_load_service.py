import os
from sqlalchemy import create_engine
from sqlalchemy.orm import sessionmaker
from flask import current_app

from ..core.extensions import db
from ..models.estate_models import EstateHouse, EstateSell
from ..models.discount_models import DiscountVersion, Discount # Ensure Discount is imported if needed for clearing
from ..models.exclusion_models import ExcludedSell # Ensure ExcludedSell is imported if needed for clearing
from .discount_service import process_discounts_from_excel

CURRENT_DIR = os.path.dirname(__file__)
PROJECT_ROOT = os.path.abspath(os.path.join(CURRENT_DIR, '..', '..'))
DISCOUNTS_EXCEL_PATH = os.path.join(PROJECT_ROOT, 'data_sources', 'discounts_template.xlsx')


def _migrate_mysql_estate_data_to_sqlite():
    """
    –ü–æ–¥–∫–ª—é—á–∞–µ—Ç—Å—è –∫ MySQL, –∏–∑–≤–ª–µ–∫–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –ø–æ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏ (–¥–æ–º–∞, –∫–≤–∞—Ä—Ç–∏—Ä—ã)
    –∏ –ø–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç –∏—Ö –≤ SQLite.
    –ù–ï –∑–∞—Ç—Ä–∞–≥–∏–≤–∞–µ—Ç —Ç–∞–±–ª–∏—Ü—ã —Å–∫–∏–¥–æ–∫ –∏–ª–∏ –∏—Å–∫–ª—é—á–µ–Ω–∏–π.
    """
    print("[MIGRATE] üîÑ –ù–∞—á–∞–ª–æ –º–∏–≥—Ä–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏ –∏–∑ MySQL –≤ SQLite...")

    mysql_uri = current_app.config['SOURCE_MYSQL_URI']
    mysql_engine = create_engine(mysql_uri)
    MySQLSession = sessionmaker(bind=mysql_engine)
    mysql_session = MySQLSession()

    try:
        # –û—á–∏—â–∞–µ–º —Ç–æ–ª—å–∫–æ –¥–∞–Ω–Ω—ã–µ –ø–æ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏ –≤ SQLite –ø–µ—Ä–µ–¥ –Ω–æ–≤–æ–π –º–∏–≥—Ä–∞—Ü–∏–µ–π
        print("[MIGRATE] üßπ –û—á–∏—Å—Ç–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö –ø–æ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏ –≤ SQLite (EstateHouse, EstateSell)...")
        db.session.query(EstateSell).delete()
        db.session.query(EstateHouse).delete()
        db.session.commit() # Commit the deletion
        print("[MIGRATE] ‚úîÔ∏è –î–∞–Ω–Ω—ã–µ –ø–æ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏ –æ—á–∏—â–µ–Ω—ã.")

        # 1. –ú–∏–≥—Ä–∞—Ü–∏—è —Ç–∞–±–ª–∏—Ü—ã estate_houses
        print("[MIGRATE] üè° –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ç–∞–±–ª–∏—Ü—ã 'estate_houses'...")
        mysql_houses = mysql_session.query(EstateHouse).filter(EstateHouse.complex_name.isnot(None)).all()
        for house in mysql_houses:
            new_house = EstateHouse(
                id=house.id,
                complex_name=house.complex_name,
                name=house.name,
                geo_house=house.geo_house
            )
            db.session.add(new_house)
        print(f"[MIGRATE] ‚úîÔ∏è –ù–∞–π–¥–µ–Ω–æ –∏ –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–æ –∫ –∑–∞–ø–∏—Å–∏ –¥–æ–º–æ–≤: {len(mysql_houses)}")

        # 2. –ú–∏–≥—Ä–∞—Ü–∏—è —Ç–∞–±–ª–∏—Ü—ã estate_sells
        print("[MIGRATE] üè¢ –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ç–∞–±–ª–∏—Ü—ã 'estate_sells'...")
        mysql_sells = mysql_session.query(EstateSell).all()
        ESTATE_SELL_CATEGORY_MAPPING = {
            'flat': '–ö–≤–∞—Ä—Ç–∏—Ä–∞',
            'comm': '–ö–æ–º–º–µ—Ä—á–µ—Å–∫–æ–µ –ø–æ–º–µ—â–µ–Ω–∏–µ',
            'garage': '–ü–∞—Ä–∫–æ–≤–∫–∞',
            'storageroom': '–ö–ª–∞–¥–æ–≤–æ–µ –ø–æ–º–µ—â–µ–Ω–∏–µ',
        }
        for sell in mysql_sells:
            new_sell = EstateSell(
                id=sell.id,
                house_id=sell.house_id,
                estate_sell_category=ESTATE_SELL_CATEGORY_MAPPING.get(sell.estate_sell_category, sell.estate_sell_category),
                estate_floor=sell.estate_floor,
                estate_rooms=sell.estate_rooms,
                estate_price_m2=sell.estate_price_m2,
                estate_sell_status_name=sell.estate_sell_status_name,
                estate_price=sell.estate_price,
                estate_area=sell.estate_area
            )
            db.session.add(new_sell)
        print(f"[MIGRATE] ‚úîÔ∏è –ù–∞–π–¥–µ–Ω–æ –∏ –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–æ –∫ –∑–∞–ø–∏—Å–∏ –æ–±—ä–µ–∫—Ç–æ–≤ –ø—Ä–æ–¥–∞–∂–∏: {len(mysql_sells)}")

        db.session.commit() # Commit the new data
        print("[MIGRATE] ‚úîÔ∏è –î–∞–Ω–Ω—ã–µ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã.")

    except Exception as e:
        print(f"[MIGRATE] ‚ùå –û–®–ò–ë–ö–ê –≤–æ –≤—Ä–µ–º—è –º–∏–≥—Ä–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏: {e}")
        db.session.rollback() # Rollback on error
        raise e
    finally:
        mysql_session.close()
        print("[MIGRATE] üîå –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å MySQL –∑–∞–∫—Ä—ã—Ç–æ.")


def load_all_initial_data(is_initial_setup=False):
    """
    –ù–∞–ø–æ–ª–Ω—è–µ—Ç –û–ë–ï –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö.
    –í—ã–∑—ã–≤–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –ü–ï–†–í–û–ù–ê–ß–ê–õ–¨–ù–û–ú –∑–∞–ø—É—Å–∫–µ, –∫–æ–≥–¥–∞ –ë–î –ø—É—Å—Ç–∞.
    """
    print("\n[INITIAL LOAD] üöÄ –ù–ê–ß–ê–õ–û –ü–†–û–¶–ï–°–°–ê –ü–ï–†–í–û–ù–ê–ß–ê–õ–¨–ù–û–ô –ó–ê–ì–†–£–ó–ö–ò –î–ê–ù–ù–´–•...")

    if is_initial_setup:
        print("[INITIAL LOAD] üõ†Ô∏è –°–æ–∑–¥–∞–Ω–∏–µ –≤—Å–µ—Ö —Ç–∞–±–ª–∏—Ü –≤ –æ–±–µ–∏—Ö –±–∞–∑–∞—Ö –¥–∞–Ω–Ω—ã—Ö...")
        # db.create_all() —Å–æ–∑–¥–∞—Å—Ç —Ç–∞–±–ª–∏—Ü—ã –≤–æ –≤—Å–µ—Ö –ø—Ä–∏–≤—è–∑–∞–Ω–Ω—ã—Ö –±–∞–∑–∞—Ö –¥–∞–Ω–Ω—ã—Ö
        db.create_all()
        print("[INITIAL LOAD] ‚úîÔ∏è –¢–∞–±–ª–∏—Ü—ã —Å–æ–∑–¥–∞–Ω—ã.")

    try:
        # 1. –ú–∏–≥—Ä–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏ –∏–∑ MySQL
        _migrate_mysql_estate_data_to_sqlite()

        # 2. –û—á–∏—â–∞–µ–º –∏ –∑–∞–≥—Ä—É–∂–∞–µ–º —Å–∫–∏–¥–∫–∏ –∏–∑ Excel (—Ç–æ–ª—å–∫–æ –ø—Ä–∏ –ø–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–µ)
        print("[INITIAL LOAD] üßπ –û—á–∏—Å—Ç–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –≤–µ—Ä—Å–∏–π —Å–∫–∏–¥–æ–∫ –¥–ª—è –Ω–∞—á–∞–ª—å–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏...")
        # –Ø–≤–Ω–æ —É–∫–∞–∑—ã–≤–∞–µ–º, –∏–∑ –∫–∞–∫–æ–π —Å–µ—Å—Å–∏–∏ —É–¥–∞–ª—è—Ç—å (—Ö–æ—Ç—è bind_key –≤ –º–æ–¥–µ–ª–∏ —É–∂–µ —ç—Ç–æ –¥–µ–ª–∞–µ—Ç)
        # –≠—Ç–æ –¥–ª—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π —è—Å–Ω–æ—Å—Ç–∏
        db.session.query(Discount).delete(synchronize_session=False)
        db.session.query(DiscountVersion).delete(synchronize_session=False)
        db.session.commit()
        print("[INITIAL LOAD] ‚úîÔ∏è –í–µ—Ä—Å–∏–∏ —Å–∫–∏–¥–æ–∫ –æ—á–∏—â–µ–Ω—ã.")

        if os.path.exists(DISCOUNTS_EXCEL_PATH):
            print(f"[INITIAL LOAD] üì• –ó–∞–≥—Ä—É–∑–∫–∞ —Å–∫–∏–¥–æ–∫ –∏–∑ —Ñ–∞–π–ª–∞: {DISCOUNTS_EXCEL_PATH}")
            initial_version = DiscountVersion(
                version_number=1,
                comment="–ù–∞—á–∞–ª—å–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –∏–∑ Excel",
                is_active=True
            )
            db.session.add(initial_version)
            db.session.flush()

            process_discounts_from_excel(DISCOUNTS_EXCEL_PATH, initial_version.id)
            print("[INITIAL LOAD] ‚úîÔ∏è –°–∫–∏–¥–∫–∏ –∏–∑ Excel —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω—ã –≤ '–í–µ—Ä—Å–∏—é 1'.")
        else:
            print(f"[INITIAL LOAD] ‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –§–∞–π–ª —Å–æ —Å–∫–∏–¥–∫–∞–º–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω ({DISCOUNTS_EXCEL_PATH}). –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —à–∞–≥.")

        db.session.commit()
        print("[INITIAL LOAD] ‚úÖ –ü–†–û–¶–ï–°–° –ü–ï–†–í–û–ù–ê–ß–ê–õ–¨–ù–û–ô –ó–ê–ì–†–£–ó–ö–ò –ó–ê–í–ï–†–®–ï–ù.\n")

    except Exception as e:
        print(f"[INITIAL LOAD] ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö: {e}")
        db.session.rollback()
        raise e


# New function for the refresh button
def refresh_estate_data_from_mysql():
    """
    –û–±–Ω–æ–≤–ª—è–µ—Ç —Ç–æ–ª—å–∫–æ –¥–∞–Ω–Ω—ã–µ –ø–æ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏ (–¥–æ–º–∞, –∫–≤–∞—Ä—Ç–∏—Ä—ã) –∏–∑ MySQL.
    –ù–ï –¢–†–û–ì–ê–ï–¢ –°–ö–ò–î–ö–ò.
    –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–û–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ" –∏ –ø—Ä–∏ –∫–∞–∂–¥–æ–º –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–µ.
    """
    print("\n[REFRESH DATA] üîÑ –ù–ê–ß–ê–õ–û –ü–†–û–¶–ï–°–°–ê –û–ë–ù–û–í–õ–ï–ù–ò–Ø –î–ê–ù–ù–´–• –ù–ï–î–í–ò–ñ–ò–ú–û–°–¢–ò –ò–ó MySQL...")
    try:
        # –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ–ø–µ—Ä—å –±—É–¥–µ—Ç –≤—ã–∑—ã–≤–∞—Ç—å—Å—è –ø—Ä–∏ –∫–∞–∂–¥–æ–º –∑–∞–ø—É—Å–∫–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        _migrate_mysql_estate_data_to_sqlite()
        print("[REFRESH DATA] ‚úÖ –î–ê–ù–ù–´–ï –ù–ï–î–í–ò–ñ–ò–ú–û–°–¢–ò –£–°–ü–ï–®–ù–û –û–ë–ù–û–í–õ–ï–ù–´ –ò–ó MySQL.\n")
        return True
    except Exception as e:
        print(f"[REFRESH DATA] ‚ùå –û–®–ò–ë–ö–ê –ü–†–ò –û–ë–ù–û–í–õ–ï–ù–ò–ò –î–ê–ù–ù–´–• –ù–ï–î–í–ò–ñ–ò–ú–û–°–¢–ò: {e}")
        return False